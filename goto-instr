#!/bin/bash

CC="./goto-cc"
INST="./goto-instrument"
CBMC="./cbmc"

fail() {
    echo $1 1>&2
    exit 1
}

check() {
    if [ ! -x "$1" ]; then
        fail "Please link $1 to the version you want to use (ln -s <PATH> $1)"
    fi
}

label() {
    echo "$1"
    echo "-----"
}

usage() {
    echo "Usage: $0 [-v] BOUND MODEL INPUT [C_OPTIONS]"
    exit 1
}

version() {
    GOTO_VSN=$($CC --version 2>&1 | head -n1)
    INST_VSN=$($INST --version)
    CBMC_VSN=$($CBMC --version)
    echo "goto-cc: $GOTO_VSN; goto-instrument: $INST_VSN; cbmc: $CBMC_VSN"
}

check $CC
check $INST
check $CBMC

while getopts ":v" o; do
    case "$o" in
        v)
            version
            exit 0
            ;;
        *)
            version
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

BOUND="$1"
MODEL="$2"
INPUT="$3"

shift 3

if [ "$BOUND" = "no" ]; then
    BOUND=""
else
    BOUND="--unwind $BOUND --no-unwinding-assertions"
fi

if [ "$MODEL" = "sc" ]; then
    MODEL=""
else
    MODEL="--mm $MODEL"
fi

C_OPTIONS=$@

Base="$(basename $INPUT .c)"
Goto="$Base.goto"
GotoMM="$Base"_"$MM.goto"

HAVE_GOTO=0
HAVE_GOTOMM=0
HAVE_RESULTS=0

cleanup() {
    if [ "$HAVE_GOTO" -eq "1" ]; then
        rm -f $Goto
    fi
    if [ "$HAVE_GOTOMM" -eq "1" ]; then
        rm -f $GotoMM
    fi
    if [ "$HAVE_RESULTS" -eq "1" ]; then
        rm -f all.txt cycles.dot output.txt ref.txt table.txt
    fi
}

trap cleanup EXIT
set -e

label "GOTO-CC"
HAVE_GOTO=1
$CC $C_OPTIONS $INPUT -o $Goto -DGOTO
label "GOTO-INSTRUMENT"
HAVE_GOTOMM=1
$INST $MODEL $Goto $GotoMM --minimum-interference
label "SELECT USER PROPERTIES"
PROPS=$($CBMC $GotoMM --show-properties | grep "Property.*assertion" | cut -d' ' -f2 | sed 's/://' |while read p; do echo -n "--property $p "; done; echo "")
echo $PROPS
label "CBMC"
$CBMC $BOUND $PROPS $GotoMM
